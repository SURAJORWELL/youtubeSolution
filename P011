/*
Valid Pair Sum 

Given an array of size N, find the number of distinct pairs {a[i], a[j]} (i != j) in the array with their sum greater than 0.

Example 1:

Input: N = 3, a[] = {3, -2, 1}
Output: 2
Explanation: {3, -2}, {3, 1} are two 
possible pairs.
Example 2:

Input: N = 4, a[] = {-1, -1, -1, 0}
Output: 0
Explanation: There are no possible pairs.
*/

//SOLUTION 1

class Solution 
{ 
    static long ValidPair(int a[], int n) 
	{ 
        long result = 0;
        int beg=0,end=n-1;
        Arrays.sort(a);
        
        while(beg<end)
        {
        	if(a[beg] + a[end] >0)
        	{
        			result += end- beg;
        			end--;
        	}
        	else
        	{
        		beg++;
        	}
        }
        return result;
 }  
	
}

//SOLUTION 2

class Solution 
{ 
    static long ValidPair(int a[], int n) 
	{ 
	      Arrays.sort(a);                
        long ans = 0; 
        int len = a.length;  
      
        for (int i = 0; i < n; ++i) { 
      
            if (a[i] <= 0) 
                continue; 
      
            long j = 0;  
        
            while (j < len) {  
                if (a[(int)j] == n) {  
                    return j;  
                }  
                else {  
                    j = j + 1;  
                }  
            } 
            ans += i - j; 
        } 
        return ans; */
        
        long count=0;
Arrays.sort(a);
for(int i=n-1;i>=0;i--){

int beg=0;
int end=i-1;
if(a[i]>0){
while(beg<=end){
int mid=(beg+end)/2;
if(a[mid]>-1*a[i]){
end=mid-1;
}else{
beg=mid+1;
}
}
count+=i-(end+1);
}

}
return count;
    } 
	
}
