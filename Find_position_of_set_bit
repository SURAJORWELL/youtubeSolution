/*
Question: Find position of set bit
Given a number N having only one ‘1’ and all other ’0’s in its binary representation, 
find position of the only set bit. If there are 0 or more than 1 set bit the answer should be -1. 
Position of  set bit '1' should be counted starting with 1 from LSB side in binary representation of the number.
Input:
N = 2
Output:
2
Explanation:
2 is represented as "10" in Binary.
As we see there's only one set bit
and it's in Position 2 and thus the
Output 2.

Input:
N = 5
Output:
-1
Explanation:
5 is represented as "101" in Binary.
As we see there's two set bits
and thus the Output -1.
*/
----------------------------------
solution 1:

class Solution {
    static int findPosition(int N) {
        // code here
        if(N == 0)
            return -1;
        
        int count = 1;
        boolean flag = true;
        
        while(N > 1) //  n = 4
        {
            if(N % 2 == 1)
            {
                flag = false;
                break;
            }
            count++; // 2 , 3
            N = N / 2 ; //2, n =1
        }
        
        if(flag)
            return count;
        
        return -1;
    }
};

----------------------
solution 2:

if(Integer.bitCount(N)!=1) 
            return -1;
            
        return Integer.toBinaryString(N).length();    		
